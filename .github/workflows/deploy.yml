name: Deploy Node.js App â€“ Git Clone + Build on Server (Public Repo Only)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code (for Terraform only)
        uses: actions/checkout@v3

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        id: tf_apply
        run: |
          cd terraform
          terraform apply -auto-approve \
            -var "region=${{ secrets.AWS_REGION }}" \
            -var "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "key_pair_name=${{ secrets.AWS_KEY_PAIR_NAME }}"
          
          # Extract and export public IP
          IP=$(terraform output -raw public_ip | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n 1)
          echo "IP=$IP" >> $GITHUB_ENV

      - name: Print Server IP
        run: |
          echo "Server IP: ${{ env.IP }}"

      - name: wait for 150 seconds to make server boot
        run: sleep 150

      - name: Clone Repo + Build & Deploy on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Install git if not already installed
            sudo yum install -y git
            sudo yum install -y docker
            sudo service docker start || sudo systemctl start docker
            
            # Add user to Docker group (first time only)
            sudo usermod -aG docker ec2-user

            # Re-login or re-source to apply group changes
            newgrp docker <<EOF
            # Clone repo
            cd ~
            rm -rf nodejs-app || true
            git clone https://github.com/Sachin-960/Nodejs_Dockerized  nodejs-app

            # Navigate to app folder
            cd ~/nodejs-app

            # Build Docker image
            docker build -t nodejs-app .

            # Run Docker container
            docker stop node-app || true
            docker rm node-app || true
            docker run -d -p 3000:3000 \
              -e "SECRET_MESSAGE=${{ secrets.APP_SECRET_MESSAGE }}" \
              -e "USERNAME=${{ secrets.APP_USERNAME }}" \
              -e "PASSWORD=${{ secrets.APP_PASSWORD }}" \
              --name node-app nodejs-app
            EOF